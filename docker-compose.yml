version: '3.8'

services:

  prometheus:
    image: prom/prometheus:v2.20.1
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:7.1.5
    depends_on:
      - prometheus
    ports:
      - "3000:3000"


  alertmanager:
    image: prom/alertmanager:v0.22.2
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'

  nginx:
    image: junwon1131/s10c102-nginx:latest
    container_name: nginx-https
    build:
      context: ./backend/nginx
      dockerfile: Dockerfile

    ports:
      - "80:80"
      - "443:443"
    volumes:
      #      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      #      - host머신 인증서를 컨테이너 내부로 볼륨매핑.
      - /etc/letsencrypt/live/j10c102.p.ssafy.io/fullchain.pem:/etc/ssl/certs/fullchain.pem
      - /etc/letsencrypt/live/j10c102.p.ssafy.io/privkey.pem:/etc/ssl/private/privkey.pem
    restart: unless-stopped
    depends_on:
      - back
      - front
    networks:
      - jenkins-network


  ocr:
    container_name: ocr
    image: junwon1131/s10c102-ai:latest
    build:
      context: ./OCR
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
    networks:
      - jenkins-network


  front:
    container_name: front
    image: junwon1131/s10c102-front:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "5173:5173"
    networks:
      - jenkins-network
    depends_on:
      - back

  back:
    container_name: back
    image: junwon1131/s10c102-back:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - jenkins-network


networks:
  jenkins-network:
    external: true
